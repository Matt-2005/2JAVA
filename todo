# TODO : Planification et suivi du projet iStore

## Étape 1 : Connexion (Login)
- [ ] Permettre à l'utilisateur de saisir son **email** et son **mot de passe**.
- [ ] Vérifier si l'email existe dans la base de données.
- [ ] Comparer le mot de passe saisi avec celui haché dans la base.
- [ ] Afficher un message d'erreur si les identifiants sont incorrects.
- [ ] Accéder à l'espace utilisateur en cas de succès.

---

## Étape 2 : Gestion des rôles
- [ ] Implémenter deux rôles : **Admin** et **Employé**.
- [ ] Permissions pour les **Admins** :
  - [ ] Créer ou supprimer des magasins.
  - [ ] Ajouter ou retirer des employés d'un magasin.
- [ ] Permissions pour les **Employés** :
  - [ ] Ajouter ou retirer des articles dans l'inventaire.
- [ ] Afficher des menus différents selon le rôle de l'utilisateur.

---

## Étape 3 : Gestion des magasins
- [ ] Permettre aux admins de créer ou supprimer des magasins.
- [ ] Permettre aux admins de lister les employés associés à un magasin.
- [ ] Associer les employés à des magasins via une table dédiée (ex. `EMPLOYEE_STORE`).

---

## Étape 4 : Gestion des articles (Inventaire)
- [ ] Permettre aux admins d’ajouter, modifier ou supprimer des articles dans l’inventaire.
- [ ] Permettre aux employés d’ajuster les quantités des articles (vente ou réception).
- [ ] Permettre aux employés de lister les articles d’un magasin.
- [ ] Créer les tables nécessaires :
  - [ ] **`ITEMS`** : Stocke les informations des articles (nom, prix, etc.).
  - [ ] **`INVENTORY`** : Lien entre les magasins et les articles avec les quantités.

---

## Étape 5 : Interface utilisateur (UI)
- [ ] Implémenter une interface graphique avec **JavaFX** ou **Swing**.
- [ ] Ajouter des champs de saisie pour les formulaires.
- [ ] Ajouter des boutons pour les actions (connexion, création de compte, etc.).
- [ ] Ajouter des tableaux pour afficher les données (magasins, inventaire, utilisateurs).

---

## Étape 6 : Sécurisation et validations
- [ ] Utiliser **BCrypt** pour le hachage des mots de passe.
- [ ] Valider les entrées utilisateur :
  - [ ] Vérifier que les emails ont un format valide.
  - [ ] S'assurer que les champs obligatoires ne sont pas vides.

---

## Étape 7 : Documentation
- [ ] Ajouter des commentaires JavaDoc aux classes et méthodes.
- [ ] Créer un schéma UML pour expliquer les relations entre les classes et la base de données.
- [ ] Rédiger un fichier README expliquant comment exécuter l'application.

---

## Étape 8 : Bonus
- [ ] Implémenter un système de **sessions** pour :
  - [ ] Identifier quel utilisateur est actuellement connecté.
  - [ ] Personnaliser l'expérience utilisateur.
- [ ] Ajouter la possibilité d'exporter des données au format **CSV** ou **JSON** :
  - [ ] Articles.
  - [ ] Utilisateurs.

---

## Priorité
1. **Étape 1 (Connexion).**
2. **Étape 2 (Gestion des rôles).**
3. **Étape 3 et 4 (Magasins et Inventaire).**
4. **Étape 5 (Interface utilisateur).**
5. **Étape 6 (Sécurisation).**
6. **Documentation à chaque étape.**
